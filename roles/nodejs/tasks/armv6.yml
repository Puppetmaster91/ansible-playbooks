---
- name: Get current user info
  getent:
    database: passwd
    key: '{{ ansible_user_id }}'
- name: Download NodeJS
  get_url:
    url: 'https://unofficial-builds.nodejs.org/download/release/{{nodejs_armv6l_version}}/node-{{nodejs_armv6l_version}}-linux-armv6l.tar.gz'
    dest: '~/node-{{nodejs_armv6l_version}}-linux-armv6l.tar.gz'
    checksum: 'sha256:https://unofficial-builds.nodejs.org/download/release/{{nodejs_armv6l_version}}/SHASUMS256.txt'
    force: no
  register: download_nodejs
- name: Uninstall old NodeJS version
  become: yes
  file:
    state: absent
    path: /opt/nodejs
  when: download_nodejs.changed
- name: Prepare NodeJS destination
  become: yes
  file:
    state: directory
    path: /opt/nodejs
    owner: '{{ getent_passwd[ansible_user_id].1 }}'
    group: '{{ getent_passwd[ansible_user_id].2 }}'
  when: download_nodejs.changed
- name: Install NodeJS
  unarchive:
    src: '~/node-{{nodejs_armv6l_version}}-linux-armv6l.tar.gz'
    dest: /opt/nodejs
    remote_src: yes
    extra_opts:
      - --strip-components=1
  when: download_nodejs.changed
- name: Link NodeJS
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  loop:
    - { src: /opt/nodejs/bin/node, dest: /usr/bin/node }
    - { src: /opt/nodejs/bin/node, dest: /usr/sbin/node }
    - { src: /opt/nodejs/bin/node, dest: /sbin/node }
    - { src: /opt/nodejs/bin/node, dest: /usr/local/bin/node }
    - { src: /opt/nodejs/bin/npm, dest: /usr/bin/npm }
    - { src: /opt/nodejs/bin/npm, dest: /usr/sbin/npm }
    - { src: /opt/nodejs/bin/npm, dest: /sbin/npm }
    - { src: /opt/nodejs/bin/npm, dest: /usr/local/bin/npm }
- name: Add npm module binaries to PATH
  lineinfile:
    dest: ~/.profile
    state: present
    line: 'PATH="$PATH:/opt/nodejs/bin"'